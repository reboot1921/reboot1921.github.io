{"posts":[{"title":"从头搭建我的博客网站","text":"不断的摄入也需要输出，才能看到相对成本，便于更好进步，搭建一个博客更好的输出。 1、选择静态博客模板框架因为我没有太多的功能需求，目前选择使用静态博客框架，目前市面上框架也很多，比较主流的如：Jekyll（Ruby语言） Octopress（基于Jekyll） Hexo（Node语言） Hugo（GO语言）等，详细信息大家可以搜索引擎，本文选择Hexo来搭建博客网站。 2、安装本地开发环境 安装Node.js 地址：https://nodejs.org/zh-cn/ 默认会安装NPM包管理器 查看Node版本和npm版本：node -v/npm -v 安装最新版本就行 3、安装Hexo12345678npm install -g cnpm --registry=https://registry.npm.taobao.org 全局安装cnpmcnpm install -g hexo-cli 安装Hexo框架生成器mkdir blog 创建博客目录cd blog 进入目录hexo init 初始化博客生成器hexo s/hexo server 启动本地博客hexo n &quot;新建博客&quot; 新建博客文件hexo g 打包成静态文件，默认在public目录下 4、添加主题全局配置将以下配置添加至博客根目录下的_config.yml文件最后 123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: false raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 5、接入评论功能Hexo默认支持的评论接口在themes/yilia/_config.yml配置文件中，多说、网易云跟帖、畅言、Disqus、Gitment，本文使用的是畅言接入。 6、上传静态文件到云服务器如果有云服务器（腾讯云，阿里云，百度云，京东云等）将静态博客文件上传到指定目录，使用nginx代理静态文件，就大功告成啦！ 7、个性化修改 所有的个性化主题配置基本都在themes/yilia/_config.yml下，大家可以自行摸索，具体可以参考：https://github.com/litten/hexo-theme-yilia 去除畅言评论发表下方的广告：themes/yilia/layout/_partial/post/changyan.ejs文件结尾添加： 123456&lt;style&gt; .section-service-w { margin-top: -250px !important; transform: scale(0) !important; }&lt;/style&gt; 最终效果如下： 截取文章部分内容作为摘要添加&lt;!-- more --&gt;至需要截取的Markdown文章相应的位置即可 分页设置如果当前博客数小于每页大小是不会展示分页组件的，分页配置通过Hexo配置文件进行设置","link":"/2021/05/12/%E4%BB%8E%E5%A4%B4%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"title":"记一次Github仓库被Fork后删除的经历","text":"1.写在前面作为开发者，我们都比较了解Github，有时兴致冲冲的将项目放到Github上维护起来，还期待获得几个star，不经意可能将敏感数据或者文件push到云端，当发现需要删除的时候可能已经来不及了，仓库已经被其他用户fork了，因为fork的仓库我们是没法直接删除的，遇到这种情况不要慌，还是有办法解决的。一般这种情况要么是需要删除某些敏感文件或数据，要么是需要直接删除整个仓库，我们可以从下边几种方式进行处理，希望对有困难的兄弟有所帮助。 2.直接联系用户方式如果能直接联系到仓库拥有着，要求其删除是最便捷的方式了，但能联系上对方也是需要看运气的，毕竟很多 GitHub 用户是水军，在平台上并不活跃，总之试试总是好的，说不定成功了呢。 2.1通过Github用户信息最简单直接的方式就是通过Github用户所留的信息，如包含邮箱、社交渠道等信息，可以直接联系用户，当然大部分用户是不会留真实的信息的。 2.2通过提交代码是配置的邮箱信息用户在提交代码是一般会配置提交者用户名和邮箱号，这个是客户端配置的，一般也不太会是真实的信息，也只能靠运气试试看。 找到一条作者的提交记录 在提交记录的url地址添加后缀.patch 2.3通过向作者的仓库提交issue找到作者活动比较多的自有项目，提交issue告知事项并等待对方答复或联系自己，这种方式只能看作者心情和品行了。 2.4通过作者曾经提交的issue进行回复这种情况和2.3类似，看作者心情。 找到作者最近活动记录 回复相关issue 3.通过官方途径进行维权如果通过以上途径均无法联系到对方，或者短时间内比较着急并未获得对方回复，这种情况下可以通过官方途径进行申诉，由官方强制进行下架处理，这种方式需要申请人填写的资料相对较多，并且是全英文的内容，毕竟Github是面向世界的托管平台，这时候借助翻译软件会省心不少。虽然官方途径比较麻烦，但是官方处理效率还是蛮高的，我这边提交申请后很快得到回复，不到一周整个流程顺利结束。对于Github内容删除政策，可以参考中文版文档，可能不是最新的但是大体内容是一致的：https://docs.github.com/zh/site-policy/content-removal-policies/submitting-content-removal-requests英语过关的同学可以直接上原版链接：https://docs.github.com/en/site-policy/content-removal-policies/submitting-content-removal-requests 3.1私人删除部分内容和文件私人信息删除申请入口：https://support.github.com/contact/private-information 3.2删除整个仓库DMCA下架申请入口：https://support.github.com/contact/dmca-takedown如果有公函或者其他附件证，能明仓库所属和侵权行为，附件内容最好英文翻译并连同原版发送，通过邮件再次提交，建议发送完整内容（问题+附件），邮箱地址：copyright@github.com 4.总结遇到数据泄露或者侵权事情的时候，确实比较心累，来自自身的压力或者其他方面的压力，这个时候需要头脑冷静的处理问题，将处理的流程梳理出来心里会踏实点，寻求他人的帮助也是一种途经，总之能解决问题就是圆满。这里我将自己经历的Github数据泄露处理流程分享出来，希望能帮助到遇到困难的同志们，加油！最后如果是通过官方途径提交申诉的方式，一定要填写的清楚些，描述清楚，不然官方会通过邮件进行确认比较耗费时间。","link":"/2021/05/12/%E8%AE%B0%E4%B8%80%E6%AC%A1Github%E4%BB%93%E5%BA%93%E8%A2%ABFork%E5%90%8E%E5%88%A0%E9%99%A4%E7%9A%84%E7%BB%8F%E5%8E%86/"}],"tags":[{"name":"搭建","slug":"搭建","link":"/tags/%E6%90%AD%E5%BB%BA/"},{"name":"Github","slug":"Github","link":"/tags/Github/"}],"categories":[{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"},{"name":"分享","slug":"分享","link":"/categories/%E5%88%86%E4%BA%AB/"}],"pages":[{"title":"关于我","text":"我是一名在北漂程序员！","link":"/about/index.html"}]}